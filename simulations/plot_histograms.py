# Read apparent magnitude files generated by SHAM interpolation,
# and plot magnitude and color histograms

from matplotlib import pyplot as plt
import numpy as np

BANDS = ["g", "r", "z"]
BASS_MzLS = "BASS-MzLS"
DECaLS_NGC = "DECaLS-NGC"
DECaLS_SGC = "DECaLS-SGC"

# Number of particles (cube root) used in run
# This determines the path where the data is stored
PARTICLE_COUNT_PINOCCHIO = 512

# Path to output data from SHAM
SHAM_OUTPUT_PATH = f"/cluster/scratch/lmachado/PINOCCHIO_OUTPUTS/luis_runs/{PARTICLE_COUNT_PINOCCHIO}cubed/interpolation_outputs/"
SHAM_OUTPUT_FILENAME_PREFIX = "ucat_sorted_app_mag_interp_app_mag_"

# Parameters for plotting
bin_count = 70

LINEWIDTH = 1.5

ALPHA = 0.5

# Color choices
blue = "#004488"
yellow = "#ddaa33"
red = "#bb5566"
orange = "#EE7733"
teal = "#009988"

plt.rcParams['font.size'] = '12'

# Determine binning for each color band
bins = {
    "g": np.linspace(15, 22, bin_count),
    "r": np.linspace(14, 20.5, bin_count),
    "z": np.linspace(15, 20.5, bin_count),
}

for band in BANDS:
    filename = f"{SHAM_OUTPUT_PATH}/{SHAM_OUTPUT_FILENAME_PREFIX}{band}.npy"

    with open(filename, 'rb') as f:
        data = np.load(f)

    print(f"Number of objects: {len(data)}")

    plt.hist(
        data,
        bins=bins[band],
        color=teal,
    )

    plt.xlim([14, 22])

    plt.title("SHAM apparent magnitudes, BASS/MzLS filters")
    plt.xlabel(f"{band} apparent magnitude")
    plt.ylabel("Count")

    plt.grid()
    plt.savefig(f"/cluster/home/lmachado/msc-thesis/simulations/images/{band}mag_hist_simulated.pdf")

    plt.show()
